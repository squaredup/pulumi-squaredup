// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as squaredup from "@pulumi/squaredup";
 *
 * const example = squaredup.getDataStreams({
 *     dataSourceId: "datasource-id",
 * });
 * ```
 */
export function getDataStreams(args: GetDataStreamsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataStreamsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("squaredup:index/getDataStreams:getDataStreams", {
        "dataSourceId": args.dataSourceId,
        "dataStreamDefinitionName": args.dataStreamDefinitionName,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataStreams.
 */
export interface GetDataStreamsArgs {
    /**
     * ID of the data source to get data streams for
     */
    dataSourceId: string;
    /**
     * Name of the data stream definition to get particular data stream details
     */
    dataStreamDefinitionName?: string;
}

/**
 * A collection of values returned by getDataStreams.
 */
export interface GetDataStreamsResult {
    /**
     * ID of the data source to get data streams for
     */
    readonly dataSourceId: string;
    /**
     * Name of the data stream definition to get particular data stream details
     */
    readonly dataStreamDefinitionName?: string;
    /**
     * Data Streams are used to query third party APIs and SquaredUp visualizes the results
     */
    readonly dataStreams: outputs.GetDataStreamsDataStream[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as squaredup from "@pulumi/squaredup";
 *
 * const example = squaredup.getDataStreams({
 *     dataSourceId: "datasource-id",
 * });
 * ```
 */
export function getDataStreamsOutput(args: GetDataStreamsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataStreamsResult> {
    return pulumi.output(args).apply((a: any) => getDataStreams(a, opts))
}

/**
 * A collection of arguments for invoking getDataStreams.
 */
export interface GetDataStreamsOutputArgs {
    /**
     * ID of the data source to get data streams for
     */
    dataSourceId: pulumi.Input<string>;
    /**
     * Name of the data stream definition to get particular data stream details
     */
    dataStreamDefinitionName?: pulumi.Input<string>;
}
