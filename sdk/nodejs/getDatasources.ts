// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Data Sources are used to query third party APIs and SquaredUp visualizes the results
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as squaredup from "@pulumi/squaredup";
 *
 * const sampleData = squaredup.getDatasources({
 *     dataSourceName: "Sample Data",
 * });
 * ```
 */
export function getDatasources(args?: GetDatasourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasourcesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("squaredup:index/getDatasources:getDatasources", {
        "dataSourceName": args.dataSourceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatasources.
 */
export interface GetDatasourcesArgs {
    /**
     * The name of the data source. If not specified, all data sources will be returned.
     */
    dataSourceName?: string;
}

/**
 * A collection of values returned by getDatasources.
 */
export interface GetDatasourcesResult {
    /**
     * The name of the data source. If not specified, all data sources will be returned.
     */
    readonly dataSourceName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly plugins: outputs.GetDatasourcesPlugin[];
}
/**
 * Data Sources are used to query third party APIs and SquaredUp visualizes the results
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as squaredup from "@pulumi/squaredup";
 *
 * const sampleData = squaredup.getDatasources({
 *     dataSourceName: "Sample Data",
 * });
 * ```
 */
export function getDatasourcesOutput(args?: GetDatasourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatasourcesResult> {
    return pulumi.output(args).apply((a: any) => getDatasources(a, opts))
}

/**
 * A collection of arguments for invoking getDatasources.
 */
export interface GetDatasourcesOutputArgs {
    /**
     * The name of the data source. If not specified, all data sources will be returned.
     */
    dataSourceName?: pulumi.Input<string>;
}
