// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squaredup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/squaredup/pulumi-squaredup/sdk/go/squaredup/internal"
)

// Data Sources are used to query third party APIs and SquaredUp visualizes the results
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/squaredup/pulumi-squaredup/sdk/go/squaredup"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := squaredup.GetDatasources(ctx, &squaredup.GetDatasourcesArgs{
//				DataSourceName: pulumi.StringRef("Sample Data"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatasources(ctx *pulumi.Context, args *GetDatasourcesArgs, opts ...pulumi.InvokeOption) (*GetDatasourcesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatasourcesResult
	err := ctx.Invoke("squaredup:index/getDatasources:getDatasources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatasources.
type GetDatasourcesArgs struct {
	// The name of the data source. If not specified, all data sources will be returned.
	DataSourceName *string `pulumi:"dataSourceName"`
}

// A collection of values returned by getDatasources.
type GetDatasourcesResult struct {
	// The name of the data source. If not specified, all data sources will be returned.
	DataSourceName *string `pulumi:"dataSourceName"`
	// The provider-assigned unique ID for this managed resource.
	Id      string                 `pulumi:"id"`
	Plugins []GetDatasourcesPlugin `pulumi:"plugins"`
}

func GetDatasourcesOutput(ctx *pulumi.Context, args GetDatasourcesOutputArgs, opts ...pulumi.InvokeOption) GetDatasourcesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatasourcesResult, error) {
			args := v.(GetDatasourcesArgs)
			r, err := GetDatasources(ctx, &args, opts...)
			var s GetDatasourcesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatasourcesResultOutput)
}

// A collection of arguments for invoking getDatasources.
type GetDatasourcesOutputArgs struct {
	// The name of the data source. If not specified, all data sources will be returned.
	DataSourceName pulumi.StringPtrInput `pulumi:"dataSourceName"`
}

func (GetDatasourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatasourcesArgs)(nil)).Elem()
}

// A collection of values returned by getDatasources.
type GetDatasourcesResultOutput struct{ *pulumi.OutputState }

func (GetDatasourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatasourcesResult)(nil)).Elem()
}

func (o GetDatasourcesResultOutput) ToGetDatasourcesResultOutput() GetDatasourcesResultOutput {
	return o
}

func (o GetDatasourcesResultOutput) ToGetDatasourcesResultOutputWithContext(ctx context.Context) GetDatasourcesResultOutput {
	return o
}

func (o GetDatasourcesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatasourcesResult] {
	return pulumix.Output[GetDatasourcesResult]{
		OutputState: o.OutputState,
	}
}

// The name of the data source. If not specified, all data sources will be returned.
func (o GetDatasourcesResultOutput) DataSourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatasourcesResult) *string { return v.DataSourceName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatasourcesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatasourcesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatasourcesResultOutput) Plugins() GetDatasourcesPluginArrayOutput {
	return o.ApplyT(func(v GetDatasourcesResult) []GetDatasourcesPlugin { return v.Plugins }).(GetDatasourcesPluginArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatasourcesResultOutput{})
}
