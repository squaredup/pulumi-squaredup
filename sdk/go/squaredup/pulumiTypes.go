// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squaredup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/squaredup/pulumi-squaredup/sdk/go/squaredup/internal"
)

var _ = internal.GetEnvOrDefault

type GetDataStreamsDataStream struct {
	DataSourceName      string `pulumi:"dataSourceName"`
	DefinitionName      string `pulumi:"definitionName"`
	DisplayName         string `pulumi:"displayName"`
	Id                  string `pulumi:"id"`
	LastUpdated         string `pulumi:"lastUpdated"`
	ParentPluginId      string `pulumi:"parentPluginId"`
	ParentPluginVersion string `pulumi:"parentPluginVersion"`
	Type                string `pulumi:"type"`
}

// GetDataStreamsDataStreamInput is an input type that accepts GetDataStreamsDataStreamArgs and GetDataStreamsDataStreamOutput values.
// You can construct a concrete instance of `GetDataStreamsDataStreamInput` via:
//
//	GetDataStreamsDataStreamArgs{...}
type GetDataStreamsDataStreamInput interface {
	pulumi.Input

	ToGetDataStreamsDataStreamOutput() GetDataStreamsDataStreamOutput
	ToGetDataStreamsDataStreamOutputWithContext(context.Context) GetDataStreamsDataStreamOutput
}

type GetDataStreamsDataStreamArgs struct {
	DataSourceName      pulumi.StringInput `pulumi:"dataSourceName"`
	DefinitionName      pulumi.StringInput `pulumi:"definitionName"`
	DisplayName         pulumi.StringInput `pulumi:"displayName"`
	Id                  pulumi.StringInput `pulumi:"id"`
	LastUpdated         pulumi.StringInput `pulumi:"lastUpdated"`
	ParentPluginId      pulumi.StringInput `pulumi:"parentPluginId"`
	ParentPluginVersion pulumi.StringInput `pulumi:"parentPluginVersion"`
	Type                pulumi.StringInput `pulumi:"type"`
}

func (GetDataStreamsDataStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataStreamsDataStream)(nil)).Elem()
}

func (i GetDataStreamsDataStreamArgs) ToGetDataStreamsDataStreamOutput() GetDataStreamsDataStreamOutput {
	return i.ToGetDataStreamsDataStreamOutputWithContext(context.Background())
}

func (i GetDataStreamsDataStreamArgs) ToGetDataStreamsDataStreamOutputWithContext(ctx context.Context) GetDataStreamsDataStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataStreamsDataStreamOutput)
}

func (i GetDataStreamsDataStreamArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataStreamsDataStream] {
	return pulumix.Output[GetDataStreamsDataStream]{
		OutputState: i.ToGetDataStreamsDataStreamOutputWithContext(ctx).OutputState,
	}
}

// GetDataStreamsDataStreamArrayInput is an input type that accepts GetDataStreamsDataStreamArray and GetDataStreamsDataStreamArrayOutput values.
// You can construct a concrete instance of `GetDataStreamsDataStreamArrayInput` via:
//
//	GetDataStreamsDataStreamArray{ GetDataStreamsDataStreamArgs{...} }
type GetDataStreamsDataStreamArrayInput interface {
	pulumi.Input

	ToGetDataStreamsDataStreamArrayOutput() GetDataStreamsDataStreamArrayOutput
	ToGetDataStreamsDataStreamArrayOutputWithContext(context.Context) GetDataStreamsDataStreamArrayOutput
}

type GetDataStreamsDataStreamArray []GetDataStreamsDataStreamInput

func (GetDataStreamsDataStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataStreamsDataStream)(nil)).Elem()
}

func (i GetDataStreamsDataStreamArray) ToGetDataStreamsDataStreamArrayOutput() GetDataStreamsDataStreamArrayOutput {
	return i.ToGetDataStreamsDataStreamArrayOutputWithContext(context.Background())
}

func (i GetDataStreamsDataStreamArray) ToGetDataStreamsDataStreamArrayOutputWithContext(ctx context.Context) GetDataStreamsDataStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataStreamsDataStreamArrayOutput)
}

func (i GetDataStreamsDataStreamArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataStreamsDataStream] {
	return pulumix.Output[[]GetDataStreamsDataStream]{
		OutputState: i.ToGetDataStreamsDataStreamArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataStreamsDataStreamOutput struct{ *pulumi.OutputState }

func (GetDataStreamsDataStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataStreamsDataStream)(nil)).Elem()
}

func (o GetDataStreamsDataStreamOutput) ToGetDataStreamsDataStreamOutput() GetDataStreamsDataStreamOutput {
	return o
}

func (o GetDataStreamsDataStreamOutput) ToGetDataStreamsDataStreamOutputWithContext(ctx context.Context) GetDataStreamsDataStreamOutput {
	return o
}

func (o GetDataStreamsDataStreamOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataStreamsDataStream] {
	return pulumix.Output[GetDataStreamsDataStream]{
		OutputState: o.OutputState,
	}
}

func (o GetDataStreamsDataStreamOutput) DataSourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsDataStream) string { return v.DataSourceName }).(pulumi.StringOutput)
}

func (o GetDataStreamsDataStreamOutput) DefinitionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsDataStream) string { return v.DefinitionName }).(pulumi.StringOutput)
}

func (o GetDataStreamsDataStreamOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsDataStream) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o GetDataStreamsDataStreamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsDataStream) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDataStreamsDataStreamOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsDataStream) string { return v.LastUpdated }).(pulumi.StringOutput)
}

func (o GetDataStreamsDataStreamOutput) ParentPluginId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsDataStream) string { return v.ParentPluginId }).(pulumi.StringOutput)
}

func (o GetDataStreamsDataStreamOutput) ParentPluginVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsDataStream) string { return v.ParentPluginVersion }).(pulumi.StringOutput)
}

func (o GetDataStreamsDataStreamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsDataStream) string { return v.Type }).(pulumi.StringOutput)
}

type GetDataStreamsDataStreamArrayOutput struct{ *pulumi.OutputState }

func (GetDataStreamsDataStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataStreamsDataStream)(nil)).Elem()
}

func (o GetDataStreamsDataStreamArrayOutput) ToGetDataStreamsDataStreamArrayOutput() GetDataStreamsDataStreamArrayOutput {
	return o
}

func (o GetDataStreamsDataStreamArrayOutput) ToGetDataStreamsDataStreamArrayOutputWithContext(ctx context.Context) GetDataStreamsDataStreamArrayOutput {
	return o
}

func (o GetDataStreamsDataStreamArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataStreamsDataStream] {
	return pulumix.Output[[]GetDataStreamsDataStream]{
		OutputState: o.OutputState,
	}
}

func (o GetDataStreamsDataStreamArrayOutput) Index(i pulumi.IntInput) GetDataStreamsDataStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataStreamsDataStream {
		return vs[0].([]GetDataStreamsDataStream)[vs[1].(int)]
	}).(GetDataStreamsDataStreamOutput)
}

type GetDatasourcesPlugin struct {
	Author      string `pulumi:"author"`
	Category    string `pulumi:"category"`
	Description string `pulumi:"description"`
	DisplayName string `pulumi:"displayName"`
	Id          string `pulumi:"id"`
	LastUpdated string `pulumi:"lastUpdated"`
	OnPrem      bool   `pulumi:"onPrem"`
	Version     string `pulumi:"version"`
}

// GetDatasourcesPluginInput is an input type that accepts GetDatasourcesPluginArgs and GetDatasourcesPluginOutput values.
// You can construct a concrete instance of `GetDatasourcesPluginInput` via:
//
//	GetDatasourcesPluginArgs{...}
type GetDatasourcesPluginInput interface {
	pulumi.Input

	ToGetDatasourcesPluginOutput() GetDatasourcesPluginOutput
	ToGetDatasourcesPluginOutputWithContext(context.Context) GetDatasourcesPluginOutput
}

type GetDatasourcesPluginArgs struct {
	Author      pulumi.StringInput `pulumi:"author"`
	Category    pulumi.StringInput `pulumi:"category"`
	Description pulumi.StringInput `pulumi:"description"`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	Id          pulumi.StringInput `pulumi:"id"`
	LastUpdated pulumi.StringInput `pulumi:"lastUpdated"`
	OnPrem      pulumi.BoolInput   `pulumi:"onPrem"`
	Version     pulumi.StringInput `pulumi:"version"`
}

func (GetDatasourcesPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatasourcesPlugin)(nil)).Elem()
}

func (i GetDatasourcesPluginArgs) ToGetDatasourcesPluginOutput() GetDatasourcesPluginOutput {
	return i.ToGetDatasourcesPluginOutputWithContext(context.Background())
}

func (i GetDatasourcesPluginArgs) ToGetDatasourcesPluginOutputWithContext(ctx context.Context) GetDatasourcesPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatasourcesPluginOutput)
}

func (i GetDatasourcesPluginArgs) ToOutput(ctx context.Context) pulumix.Output[GetDatasourcesPlugin] {
	return pulumix.Output[GetDatasourcesPlugin]{
		OutputState: i.ToGetDatasourcesPluginOutputWithContext(ctx).OutputState,
	}
}

// GetDatasourcesPluginArrayInput is an input type that accepts GetDatasourcesPluginArray and GetDatasourcesPluginArrayOutput values.
// You can construct a concrete instance of `GetDatasourcesPluginArrayInput` via:
//
//	GetDatasourcesPluginArray{ GetDatasourcesPluginArgs{...} }
type GetDatasourcesPluginArrayInput interface {
	pulumi.Input

	ToGetDatasourcesPluginArrayOutput() GetDatasourcesPluginArrayOutput
	ToGetDatasourcesPluginArrayOutputWithContext(context.Context) GetDatasourcesPluginArrayOutput
}

type GetDatasourcesPluginArray []GetDatasourcesPluginInput

func (GetDatasourcesPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatasourcesPlugin)(nil)).Elem()
}

func (i GetDatasourcesPluginArray) ToGetDatasourcesPluginArrayOutput() GetDatasourcesPluginArrayOutput {
	return i.ToGetDatasourcesPluginArrayOutputWithContext(context.Background())
}

func (i GetDatasourcesPluginArray) ToGetDatasourcesPluginArrayOutputWithContext(ctx context.Context) GetDatasourcesPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatasourcesPluginArrayOutput)
}

func (i GetDatasourcesPluginArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDatasourcesPlugin] {
	return pulumix.Output[[]GetDatasourcesPlugin]{
		OutputState: i.ToGetDatasourcesPluginArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDatasourcesPluginOutput struct{ *pulumi.OutputState }

func (GetDatasourcesPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatasourcesPlugin)(nil)).Elem()
}

func (o GetDatasourcesPluginOutput) ToGetDatasourcesPluginOutput() GetDatasourcesPluginOutput {
	return o
}

func (o GetDatasourcesPluginOutput) ToGetDatasourcesPluginOutputWithContext(ctx context.Context) GetDatasourcesPluginOutput {
	return o
}

func (o GetDatasourcesPluginOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatasourcesPlugin] {
	return pulumix.Output[GetDatasourcesPlugin]{
		OutputState: o.OutputState,
	}
}

func (o GetDatasourcesPluginOutput) Author() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatasourcesPlugin) string { return v.Author }).(pulumi.StringOutput)
}

func (o GetDatasourcesPluginOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatasourcesPlugin) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetDatasourcesPluginOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatasourcesPlugin) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetDatasourcesPluginOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatasourcesPlugin) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o GetDatasourcesPluginOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatasourcesPlugin) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatasourcesPluginOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatasourcesPlugin) string { return v.LastUpdated }).(pulumi.StringOutput)
}

func (o GetDatasourcesPluginOutput) OnPrem() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatasourcesPlugin) bool { return v.OnPrem }).(pulumi.BoolOutput)
}

func (o GetDatasourcesPluginOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatasourcesPlugin) string { return v.Version }).(pulumi.StringOutput)
}

type GetDatasourcesPluginArrayOutput struct{ *pulumi.OutputState }

func (GetDatasourcesPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatasourcesPlugin)(nil)).Elem()
}

func (o GetDatasourcesPluginArrayOutput) ToGetDatasourcesPluginArrayOutput() GetDatasourcesPluginArrayOutput {
	return o
}

func (o GetDatasourcesPluginArrayOutput) ToGetDatasourcesPluginArrayOutputWithContext(ctx context.Context) GetDatasourcesPluginArrayOutput {
	return o
}

func (o GetDatasourcesPluginArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDatasourcesPlugin] {
	return pulumix.Output[[]GetDatasourcesPlugin]{
		OutputState: o.OutputState,
	}
}

func (o GetDatasourcesPluginArrayOutput) Index(i pulumi.IntInput) GetDatasourcesPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatasourcesPlugin {
		return vs[0].([]GetDatasourcesPlugin)[vs[1].(int)]
	}).(GetDatasourcesPluginOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataStreamsDataStreamInput)(nil)).Elem(), GetDataStreamsDataStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataStreamsDataStreamArrayInput)(nil)).Elem(), GetDataStreamsDataStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatasourcesPluginInput)(nil)).Elem(), GetDatasourcesPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatasourcesPluginArrayInput)(nil)).Elem(), GetDatasourcesPluginArray{})
	pulumi.RegisterOutputType(GetDataStreamsDataStreamOutput{})
	pulumi.RegisterOutputType(GetDataStreamsDataStreamArrayOutput{})
	pulumi.RegisterOutputType(GetDatasourcesPluginOutput{})
	pulumi.RegisterOutputType(GetDatasourcesPluginArrayOutput{})
}
