// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package squaredup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/squaredup/pulumi-squaredup/sdk/go/squaredup/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/squaredup/pulumi-squaredup/sdk/go/squaredup"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := squaredup.GetDataStreams(ctx, &squaredup.GetDataStreamsArgs{
//				DataSourceId: "datasource-id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDataStreams(ctx *pulumi.Context, args *GetDataStreamsArgs, opts ...pulumi.InvokeOption) (*GetDataStreamsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDataStreamsResult
	err := ctx.Invoke("squaredup:index/getDataStreams:getDataStreams", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataStreams.
type GetDataStreamsArgs struct {
	// ID of the data source to get data streams for
	DataSourceId string `pulumi:"dataSourceId"`
	// Name of the data stream definition to get particular data stream details
	DataStreamDefinitionName *string `pulumi:"dataStreamDefinitionName"`
}

// A collection of values returned by getDataStreams.
type GetDataStreamsResult struct {
	// ID of the data source to get data streams for
	DataSourceId string `pulumi:"dataSourceId"`
	// Name of the data stream definition to get particular data stream details
	DataStreamDefinitionName *string `pulumi:"dataStreamDefinitionName"`
	// Data Streams are used to query third party APIs and SquaredUp visualizes the results
	DataStreams []GetDataStreamsDataStream `pulumi:"dataStreams"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetDataStreamsOutput(ctx *pulumi.Context, args GetDataStreamsOutputArgs, opts ...pulumi.InvokeOption) GetDataStreamsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDataStreamsResult, error) {
			args := v.(GetDataStreamsArgs)
			r, err := GetDataStreams(ctx, &args, opts...)
			var s GetDataStreamsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDataStreamsResultOutput)
}

// A collection of arguments for invoking getDataStreams.
type GetDataStreamsOutputArgs struct {
	// ID of the data source to get data streams for
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// Name of the data stream definition to get particular data stream details
	DataStreamDefinitionName pulumi.StringPtrInput `pulumi:"dataStreamDefinitionName"`
}

func (GetDataStreamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataStreamsArgs)(nil)).Elem()
}

// A collection of values returned by getDataStreams.
type GetDataStreamsResultOutput struct{ *pulumi.OutputState }

func (GetDataStreamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataStreamsResult)(nil)).Elem()
}

func (o GetDataStreamsResultOutput) ToGetDataStreamsResultOutput() GetDataStreamsResultOutput {
	return o
}

func (o GetDataStreamsResultOutput) ToGetDataStreamsResultOutputWithContext(ctx context.Context) GetDataStreamsResultOutput {
	return o
}

func (o GetDataStreamsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataStreamsResult] {
	return pulumix.Output[GetDataStreamsResult]{
		OutputState: o.OutputState,
	}
}

// ID of the data source to get data streams for
func (o GetDataStreamsResultOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsResult) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// Name of the data stream definition to get particular data stream details
func (o GetDataStreamsResultOutput) DataStreamDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDataStreamsResult) *string { return v.DataStreamDefinitionName }).(pulumi.StringPtrOutput)
}

// Data Streams are used to query third party APIs and SquaredUp visualizes the results
func (o GetDataStreamsResultOutput) DataStreams() GetDataStreamsDataStreamArrayOutput {
	return o.ApplyT(func(v GetDataStreamsResult) []GetDataStreamsDataStream { return v.DataStreams }).(GetDataStreamsDataStreamArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDataStreamsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataStreamsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDataStreamsResultOutput{})
}
